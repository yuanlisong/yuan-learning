<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuanlisong.boot1.mbg.mapper.BookshelfMapper">
  <resultMap id="BaseResultMap" type="com.yuanlisong.boot1.mbg.model.Bookshelf">
    <result column="BOOK_ID" jdbcType="INTEGER" property="bookId" />
    <result column="BOOK_NAME" jdbcType="VARCHAR" property="bookName" />
    <result column="BOOK_TYPE" jdbcType="VARCHAR" property="bookType" />
    <result column="AUTHOR" jdbcType="VARCHAR" property="author" />
    <result column="INTIME" jdbcType="DATE" property="intime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    BOOK_ID, BOOK_NAME, BOOK_TYPE, AUTHOR, INTIME
  </sql>
  <select id="selectByExample" parameterType="com.yuanlisong.boot1.mbg.model.BookshelfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bookshelf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yuanlisong.boot1.mbg.model.BookshelfExample">
    delete from bookshelf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yuanlisong.boot1.mbg.model.Bookshelf">
    insert into bookshelf (BOOK_ID, BOOK_NAME, BOOK_TYPE, 
      AUTHOR, INTIME)
    values (#{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookType,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{intime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.yuanlisong.boot1.mbg.model.Bookshelf">
    insert into bookshelf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        BOOK_ID,
      </if>
      <if test="bookName != null">
        BOOK_NAME,
      </if>
      <if test="bookType != null">
        BOOK_TYPE,
      </if>
      <if test="author != null">
        AUTHOR,
      </if>
      <if test="intime != null">
        INTIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookType != null">
        #{bookType,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="intime != null">
        #{intime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yuanlisong.boot1.mbg.model.BookshelfExample" resultType="java.lang.Integer">
    select count(*) from bookshelf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bookshelf
    <set>
      <if test="record.bookId != null">
        BOOK_ID = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null">
        BOOK_NAME = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookType != null">
        BOOK_TYPE = #{record.bookType,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        AUTHOR = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.intime != null">
        INTIME = #{record.intime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bookshelf
    set BOOK_ID = #{record.bookId,jdbcType=INTEGER},
      BOOK_NAME = #{record.bookName,jdbcType=VARCHAR},
      BOOK_TYPE = #{record.bookType,jdbcType=VARCHAR},
      AUTHOR = #{record.author,jdbcType=VARCHAR},
      INTIME = #{record.intime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>